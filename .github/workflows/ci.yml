# .github/workflows/ci.yml
name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

env:
  TF_ROOT: ${{ github.workspace }}/s3_and_user_service
  TF_STATE_NAME: git-s3-lfs

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_ROOT }}

  validate:
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ env.TF_ROOT }}

  build:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Plan
        run: terraform plan
        working-directory: ${{ env.TF_ROOT }}

  test:
    runs-on: ubuntu-latest
    env:
      TF_ROOT: ${{ github.workspace }}/tests
      TF_STATE_NAME: git-s3-lfs-tests
    services:
      localstack:
        image: localstack/localstack:1.4
        # options: --privileged
        ports:
          - 4566:4566
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_ROOT }}

      - name: Terraform Plan
        run: terraform plan -var-file=vars/git.tfvars
        working-directory: ${{ env.TF_ROOT }}

      # - name: Terraform Apply
      #   run: terraform apply --auto-approve
      #   working-directory: ${{ env.TF_ROOT }}
